You are a product manager and currently leading a team to develop a new product. Unfortunately,
the latest version of your product fails the quality check. Since each version is developed based on the previous version,
all the versions after a bad version are also bad.
Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one,
which causes all the following ones to be bad.
You are given an API bool isBadVersion(version) which returns whether version is bad.
Implement a function to find the first bad version. You should minimize the number of calls to the API.

Вы являетесь менеджером по продукту и в настоящее время возглавляете команду по разработке нового продукта.
К сожалению, последняя версия вашего продукта не прошла проверку качества.
Поскольку каждая версия разрабатывается на основе предыдущей, все версии после плохой версии также являются плохими.
Предположим, у вас есть n версии [1, 2, ..., n] и вы хотите найти первую плохую, из-за которой все последующие будут плохими.
Вам предоставляется функция API bool isBadVersion(version), которая возвращает ответ, является ли версия плохой.
Реализуйте функцию для поиска первой плохой версии. Вам следует минимизировать количество вызовов API.